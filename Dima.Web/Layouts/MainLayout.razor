@inherits LayoutComponentBase

<MudThemeProvider
    @ref="_mudThemeProvider"
    @bind-IsDarkMode="_isDarkMode"
    Theme="Configuration.Theme"
/>
<MudSnackbarProvider/>

<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar>
                <MudIconButton
                    Icon="@Icons.Material.Filled.Menu"
                    Color="Color.Inherit"
                    Edge="Edge.Start"
                    OnClick="ToggleDrawer"
                />
                <MudSpacer/>
                <MudText Typo="Typo.caption">
                    @context.User.Identity?.Name
                </MudText>
                <MudSwitch
                    @bind-Value="@_isDarkMode"
                    Color="Color.Inherit"
                    T="bool"
                    Class="ma-4"
                    ThumbIcon="@Icons.Material.TwoTone.Lightbulb"
                />
            </MudAppBar>

            <MudDrawer @bind-Open="_isDrawerOpened">
                <NavMenu/>
            </MudDrawer>

            <MudMainContent>
                <MudContainer>
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>

    <NotAuthorized>
        <LoginRedirect/>
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool _isDrawerOpened = true;
    private bool _isDarkMode = true;
    private MudThemeProvider _mudThemeProvider = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        _isDarkMode = await _mudThemeProvider.GetSystemPreference();
        await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
        StateHasChanged(); // Faz com que a aplicação seja forçada a atualizar a tela
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        return Task.CompletedTask;
    }

    private void ToggleDrawer()
        => _isDrawerOpened = !_isDrawerOpened;

}